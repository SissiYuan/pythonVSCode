# Overview:
# Generic jobs template to compile and build extension

jobs:
  - job: Extension
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - template: ../steps/initialization.yml
        parameters:
          PythonVersion: $(PythonVersion)
          workingDirectory: $(Build.SourcesDirectory)
          compile: 'false'
          installVSCEorNPX: 'false'
          installpip: 'false'

      - task: Gulp@0
        displayName: 'Compile and check for errors'
        inputs:
          targets: 'compile'

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/out'
          archiveType: 'zip' # Options: zip, 7z, tar, wim
          archiveFile: '$(Build.SourcesDirectory)/Extension.zip'
          replaceExistingArchive: true

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(Build.SourcesDirectory)/Extension.zip
          artifactName: ExtensionZip

  - job: IPyWidgets
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - template: ../steps/initialization.yml
        parameters:
          PythonVersion: $(PythonVersion)
          workingDirectory: $(Build.SourcesDirectory)
          compile: 'false'
          installVSCEorNPX: 'false'
          installpip: 'false'

      - task: Gulp@0
        displayName: 'Compile and check for errors'
        inputs:
          targets: 'compile-ipywidgets'

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/out'
          archiveType: 'zip' # Options: zip, 7z, tar, wim
          archiveFile: '$(Build.SourcesDirectory)/IPyWidets.zip'
          replaceExistingArchive: true

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(Build.SourcesDirectory)/IPyWidets.zip
          artifactName: IPyWidetsZip


  - job: Notebbooks
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - template: ../steps/initialization.yml
        parameters:
          PythonVersion: $(PythonVersion)
          workingDirectory: $(Build.SourcesDirectory)
          compile: 'false'
          installVSCEorNPX: 'false'
          installpip: 'false'

      - task: Gulp@0
        displayName: 'Compile and check for errors'
        inputs:
          targets: 'compile-notebooks'

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/out'
          archiveType: 'zip' # Options: zip, 7z, tar, wim
          archiveFile: '$(Build.SourcesDirectory)/Notebooks.zip'
          replaceExistingArchive: true

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(Build.SourcesDirectory)/Notebooks.zip
          artifactName: NotebooksZip

